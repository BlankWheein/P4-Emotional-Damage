//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from EmotionalDamage.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IEmotionalDamageListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class EmotionalDamageBaseListener : IEmotionalDamageListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] EmotionalDamageParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] EmotionalDamageParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmts([NotNull] EmotionalDamageParser.StmtsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmts([NotNull] EmotionalDamageParser.StmtsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] EmotionalDamageParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] EmotionalDamageParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] EmotionalDamageParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] EmotionalDamageParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] EmotionalDamageParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] EmotionalDamageParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.println"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintln([NotNull] EmotionalDamageParser.PrintlnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.println"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintln([NotNull] EmotionalDamageParser.PrintlnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.returnstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnstmt([NotNull] EmotionalDamageParser.ReturnstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.returnstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnstmt([NotNull] EmotionalDamageParser.ReturnstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc([NotNull] EmotionalDamageParser.FuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc([NotNull] EmotionalDamageParser.FuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.gradfunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGradfunc([NotNull] EmotionalDamageParser.GradfuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.gradfunc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGradfunc([NotNull] EmotionalDamageParser.GradfuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.rettype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRettype([NotNull] EmotionalDamageParser.RettypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.rettype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRettype([NotNull] EmotionalDamageParser.RettypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] EmotionalDamageParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] EmotionalDamageParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] EmotionalDamageParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] EmotionalDamageParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.matrixparameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrixparameter([NotNull] EmotionalDamageParser.MatrixparameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.matrixparameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrixparameter([NotNull] EmotionalDamageParser.MatrixparameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.arrparameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrparameter([NotNull] EmotionalDamageParser.ArrparameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.arrparameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrparameter([NotNull] EmotionalDamageParser.ArrparameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.graddcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGraddcl([NotNull] EmotionalDamageParser.GraddclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.graddcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGraddcl([NotNull] EmotionalDamageParser.GraddclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.intdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntdcl([NotNull] EmotionalDamageParser.IntdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.intdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntdcl([NotNull] EmotionalDamageParser.IntdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.floatdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatdcl([NotNull] EmotionalDamageParser.FloatdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.floatdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatdcl([NotNull] EmotionalDamageParser.FloatdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.intarrdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntarrdcl([NotNull] EmotionalDamageParser.IntarrdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.intarrdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntarrdcl([NotNull] EmotionalDamageParser.IntarrdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.floatarrdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatarrdcl([NotNull] EmotionalDamageParser.FloatarrdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.floatarrdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatarrdcl([NotNull] EmotionalDamageParser.FloatarrdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.arrupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrupdate([NotNull] EmotionalDamageParser.ArrupdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.arrupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrupdate([NotNull] EmotionalDamageParser.ArrupdateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.arrassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrassign([NotNull] EmotionalDamageParser.ArrassignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.arrassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrassign([NotNull] EmotionalDamageParser.ArrassignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.matrixassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrixassign([NotNull] EmotionalDamageParser.MatrixassignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.matrixassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrixassign([NotNull] EmotionalDamageParser.MatrixassignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.intmatrixdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntmatrixdcl([NotNull] EmotionalDamageParser.IntmatrixdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.intmatrixdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntmatrixdcl([NotNull] EmotionalDamageParser.IntmatrixdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.floatmatrixdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatmatrixdcl([NotNull] EmotionalDamageParser.FloatmatrixdclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.floatmatrixdcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatmatrixdcl([NotNull] EmotionalDamageParser.FloatmatrixdclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.matrixupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrixupdate([NotNull] EmotionalDamageParser.MatrixupdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.matrixupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrixupdate([NotNull] EmotionalDamageParser.MatrixupdateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.matrixarrexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrixarrexpr([NotNull] EmotionalDamageParser.MatrixarrexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.matrixarrexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrixarrexpr([NotNull] EmotionalDamageParser.MatrixarrexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.arrexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrexpr([NotNull] EmotionalDamageParser.ArrexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.arrexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrexpr([NotNull] EmotionalDamageParser.ArrexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.matrixtranspose"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrixtranspose([NotNull] EmotionalDamageParser.MatrixtransposeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.matrixtranspose"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrixtranspose([NotNull] EmotionalDamageParser.MatrixtransposeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.matrixinverse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrixinverse([NotNull] EmotionalDamageParser.MatrixinverseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.matrixinverse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrixinverse([NotNull] EmotionalDamageParser.MatrixinverseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.numassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumassign([NotNull] EmotionalDamageParser.NumassignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.numassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumassign([NotNull] EmotionalDamageParser.NumassignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.numupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumupdate([NotNull] EmotionalDamageParser.NumupdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.numupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumupdate([NotNull] EmotionalDamageParser.NumupdateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.boolassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolassign([NotNull] EmotionalDamageParser.BoolassignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.boolassign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolassign([NotNull] EmotionalDamageParser.BoolassignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.boolupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolupdate([NotNull] EmotionalDamageParser.BoolupdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.boolupdate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolupdate([NotNull] EmotionalDamageParser.BoolupdateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.booldcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooldcl([NotNull] EmotionalDamageParser.BooldclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.booldcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooldcl([NotNull] EmotionalDamageParser.BooldclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.boolval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolval([NotNull] EmotionalDamageParser.BoolvalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.boolval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolval([NotNull] EmotionalDamageParser.BoolvalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.selective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelective([NotNull] EmotionalDamageParser.SelectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.selective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelective([NotNull] EmotionalDamageParser.SelectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.ifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfstmt([NotNull] EmotionalDamageParser.IfstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.ifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfstmt([NotNull] EmotionalDamageParser.IfstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.elifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElifstmt([NotNull] EmotionalDamageParser.ElifstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.elifstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElifstmt([NotNull] EmotionalDamageParser.ElifstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.elsestmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElsestmt([NotNull] EmotionalDamageParser.ElsestmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.elsestmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElsestmt([NotNull] EmotionalDamageParser.ElsestmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.iterative"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterative([NotNull] EmotionalDamageParser.IterativeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.iterative"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterative([NotNull] EmotionalDamageParser.IterativeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.forstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForstmt([NotNull] EmotionalDamageParser.ForstmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.forstmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForstmt([NotNull] EmotionalDamageParser.ForstmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.whilestmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhilestmt([NotNull] EmotionalDamageParser.WhilestmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.whilestmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhilestmt([NotNull] EmotionalDamageParser.WhilestmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.random"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRandom([NotNull] EmotionalDamageParser.RandomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.random"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRandom([NotNull] EmotionalDamageParser.RandomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.numexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumexpr([NotNull] EmotionalDamageParser.NumexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.numexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumexpr([NotNull] EmotionalDamageParser.NumexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexpr([NotNull] EmotionalDamageParser.BexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexpr([NotNull] EmotionalDamageParser.BexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqrt([NotNull] EmotionalDamageParser.SqrtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqrt([NotNull] EmotionalDamageParser.SqrtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] EmotionalDamageParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] EmotionalDamageParser.PowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.mod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMod([NotNull] EmotionalDamageParser.ModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.mod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMod([NotNull] EmotionalDamageParser.ModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.unaryoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryoperator([NotNull] EmotionalDamageParser.UnaryoperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.unaryoperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryoperator([NotNull] EmotionalDamageParser.UnaryoperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVal([NotNull] EmotionalDamageParser.ValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVal([NotNull] EmotionalDamageParser.ValContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.funccall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunccall([NotNull] EmotionalDamageParser.FunccallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.funccall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunccall([NotNull] EmotionalDamageParser.FunccallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.gradfunccall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGradfunccall([NotNull] EmotionalDamageParser.GradfunccallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.gradfunccall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGradfunccall([NotNull] EmotionalDamageParser.GradfunccallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] EmotionalDamageParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] EmotionalDamageParser.IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] EmotionalDamageParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] EmotionalDamageParser.NumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EmotionalDamageParser.numtypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumtypes([NotNull] EmotionalDamageParser.NumtypesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EmotionalDamageParser.numtypes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumtypes([NotNull] EmotionalDamageParser.NumtypesContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
