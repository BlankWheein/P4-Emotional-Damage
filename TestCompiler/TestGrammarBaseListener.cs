//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TestGrammar.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITestGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class TestGrammarBaseListener : ITestGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] TestGrammarParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] TestGrammarParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmts([NotNull] TestGrammarParser.StmtsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.stmts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmts([NotNull] TestGrammarParser.StmtsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] TestGrammarParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] TestGrammarParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] TestGrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] TestGrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.exprs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprs([NotNull] TestGrammarParser.ExprsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.exprs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprs([NotNull] TestGrammarParser.ExprsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] TestGrammarParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] TestGrammarParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.textstring"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTextstring([NotNull] TestGrammarParser.TextstringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.textstring"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTextstring([NotNull] TestGrammarParser.TextstringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.selective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelective([NotNull] TestGrammarParser.SelectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.selective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelective([NotNull] TestGrammarParser.SelectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.iterative"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterative([NotNull] TestGrammarParser.IterativeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.iterative"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterative([NotNull] TestGrammarParser.IterativeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBexpr([NotNull] TestGrammarParser.BexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.bexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBexpr([NotNull] TestGrammarParser.BexprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] TestGrammarParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] TestGrammarParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.dummy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDummy([NotNull] TestGrammarParser.DummyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.dummy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDummy([NotNull] TestGrammarParser.DummyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVal([NotNull] TestGrammarParser.ValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.val"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVal([NotNull] TestGrammarParser.ValContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.valtype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValtype([NotNull] TestGrammarParser.ValtypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.valtype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValtype([NotNull] TestGrammarParser.ValtypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] TestGrammarParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] TestGrammarParser.IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TestGrammarParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] TestGrammarParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TestGrammarParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] TestGrammarParser.NumContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
